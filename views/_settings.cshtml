@model Checklist.ChecklistConfigModel

<table id="table-admin-checklist" class="basic">
    <thead>
        <tr>
            <th data-field="Title" data-required='true'>Title</th>                     
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr data-id="@item.Id" id="row-@item.Id">                      
                <td>@item.Title</td>            
                <td data-edit="false" class="actions">
                    <span class="action-button-delete cursor-pointer" title="@GetResource(ResourceKeys.Delete)" data-method="delete"></span>
                </td>
            </tr>
        }
    </tbody>
</table>


<script type="text/javascript">
    $(document).ready(function ()
    {
        initDatatablesWithEdit("#table-admin-checklist", { "bPaginate": false, "bFilter": false, "bInfo": false });

        $("#table-admin-checklist_wrapper").prepend("<div class='left' style='padding:6px'><input type='text' name='checklist-title' id='checklist-title' placeholder='Enter checklist item' class='input-size9 margin-right-5' /><input type='button' name='add-checklist' id='add-checklist' value='Add' class='button-primary' /></div>");

        $('#add-checklist').unbind("click").bind("click", function () {
            checklist_app.postNewItem();
        });

        gemini_commons.inputKeyHandlerUnbind("#checklist-title");

        gemini_commons.inputKeyHandler("#checklist-title", function () { checklist_app.postNewItem() });

        $('#table-admin-checklist .action-button-delete').click(function () {
            var row = $(this).parents('tr:eq(0)');

            gemini_popup.modalConfirm("Delete " + $('td:first',row).text() + "?",null, function (response) {
                    gemini_ajax.postCall("apps/Checklist", "delete",
                    function (response) {
                        if (response.success) {
                            $('#table-admin-checklist #row-' + row.attr('data-id')).remove();
                        }
                    }, null, { templateId: $('#Template').val(), itemId: row.attr('data-id')}, null, true);
            });
        });

        function initDatatablesWithEdit(selector, dndEnabled, editSelector, options)
        {
            var optionsString = {};

            if (editSelector == null || editSelector == undefined) editSelector = "tbody td:not([data-edit='false'])";

            if (options != null) optionsString = options;

            var dnd = true;//dndEnabled;
            var dndDisabled = false;
            var wasSorted = false;

            var params = $.extend({},
                {
                    bFilter: true,
                    bInfo: true,
                    bSort: true,
                    bPaginate: true,
                    bLengthChange: false,
                    iDisplayLength: 20,
                    sPaginationType: "full_numbers",
                    "oLanguage": {
                        "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "sInfoEmpty": "No data."
                    },
                    fnDrawCallback: function (value, y) {

                        if (dnd) {
                            if (value.bFiltered || value.bSorted) {
                                $('.dragHandle').hide();
                                wasSorted = true;

                            } else if(!wasSorted) {
                                $('.dragHandle').show();

                            }
                        }

                        $(selector + ' ' + editSelector).editable('apps/Checklist/saveproperty', {
                            placeholder: '',
                            detectType: function (elem) {
                                var th = gemini_ui.getTableTHForTD(elem);
                                return $(th).data('edit-type');
                            },
                            validationRequired: function (elm) {
                                var th = gemini_ui.getTableTHForTD(elm);
                                return $(th).data('required');
                            },
                            loadurl: csVars.Url + 'apps/Checklist/getproperty',
                            loaddata: function () {
                                var th = gemini_ui.getTableTHForTD(this);
                                var field = $(th).data('field');
                                return {
                                    id: $(this).parent().data('id'),
                                    property: field,
                                    templateId: $('#Template').val()
                                };
                            },
                            submitdata: function () {
                                var th = gemini_ui.getTableTHForTD(this);
                                var field = $(th).data('field');
                                return {
                                    id: $(this).parent().data('id'),
                                    property: field,
                                    templateId: $('#Template').val()
                                };
                            },
                            /*"callback": function (sValue, y) {
                            /// Redraw the table from the new data on the server
                            //oTable.fnDraw();
                            },*/
                            "height": "14px"
                        });

                        if ($('*[data-edit-type="color"]').length > 0) {
                            $(editSelector).each(function () {
                                var th = gemini_ui.getTableTHForTD(this);
                                if ($(th).data('edit-type') == "color") {
                                    $(this).click();
                                }
                            });
                        }
                    }
                }, optionsString);


            gemini_admin.currentTable = $(selector).dataTable(params);
        }
    });
</script>
